
hello.elf:     file format elf32-bigarm

Disassembly of section .text:

00000000 <start>:
   0:	e10f1000 	mrs	r1, CPSR
   4:	e3c11080 	bic	r1, r1, #128	; 0x80
   8:	e121f001 	msr	CPSR_c, r1
   c:	eb000000 	bl	14 <main>

00000010 <loop>:
  10:	eafffffe 	b	10 <loop>

00000014 <main>:
 
	struct ArkeOutputInterface arke_oif;
	
	int stall_go_in;
	stall_go_in = ((GPIO_IN>>10) & 0x1);
  14:	e3e03a01 	mvn	r3, #4096	; 0x1000
	
	// init
	arke_oif.data_out = 0;
	arke_oif.eop_out = 0;
	arke_oif.tx = 0;
	arke_oif.stall_go_out = 1;
	
	GPIO_OUT = TO_INTEGER(arke_oif);
  18:	e3a02b01 	mov	r2, #1024	; 0x400
  1c:	e5131fdb 	ldr	r1, [r3, #-4059]
  20:	e3a00e66 	mov	r0, #1632	; 0x660
  24:	e3a0ce46 	mov	ip, #1120	; 0x460
  28:	e5032fdf 	str	r2, [r3, #-4063]
  2c:	e1a01003 	mov	r1, r3
  30:	e280000c 	add	r0, r0, #12	; 0xc
  34:	e28cc00c 	add	ip, ip, #12	; 0xc
	
	while(1) {
		
		// header
		arke_oif.data_out = 2;
		arke_oif.tx = 1;
		
		stall_go_in = ((GPIO_IN>>10) & 0x1);
  38:	e5113fdb 	ldr	r3, [r1, #-4059]
		while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
  3c:	e3130b01 	tst	r3, #1024	; 0x400
  40:	1a000003 	bne	54 <main+0x40>
  44:	e3e02a01 	mvn	r2, #4096	; 0x1000
  48:	e5123fdb 	ldr	r3, [r2, #-4059]
  4c:	e3130b01 	tst	r3, #1024	; 0x400
  50:	0afffffc 	beq	48 <main+0x34>
		GPIO_OUT = TO_INTEGER(arke_oif);
  54:	e3a03c06 	mov	r3, #1536	; 0x600
		
		arke_oif.tx = 0;
		
		GPIO_OUT = TO_INTEGER(arke_oif);
  58:	e3a02b01 	mov	r2, #1024	; 0x400
  5c:	e2833002 	add	r3, r3, #2	; 0x2
  60:	e2822002 	add	r2, r2, #2	; 0x2
  64:	e5013fdf 	str	r3, [r1, #-4063]
  68:	e5012fdf 	str	r2, [r1, #-4063]
		
		// payload 
			arke_oif.data_out = 'h';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
  6c:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
  70:	e3130b01 	tst	r3, #1024	; 0x400
  74:	1a000003 	bne	88 <main+0x74>
  78:	e3e02a01 	mvn	r2, #4096	; 0x1000
  7c:	e5123fdb 	ldr	r3, [r2, #-4059]
  80:	e3130b01 	tst	r3, #1024	; 0x400
  84:	0afffffc 	beq	7c <main+0x68>
			GPIO_OUT = TO_INTEGER(arke_oif);
  88:	e3a03e66 	mov	r3, #1632	; 0x660
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
  8c:	e3a02e46 	mov	r2, #1120	; 0x460
  90:	e2833008 	add	r3, r3, #8	; 0x8
  94:	e2822008 	add	r2, r2, #8	; 0x8
  98:	e5013fdf 	str	r3, [r1, #-4063]
  9c:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = 'e';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
  a0:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
  a4:	e3130b01 	tst	r3, #1024	; 0x400
  a8:	1a000003 	bne	bc <main+0xa8>
  ac:	e3e02a01 	mvn	r2, #4096	; 0x1000
  b0:	e5123fdb 	ldr	r3, [r2, #-4059]
  b4:	e3130b01 	tst	r3, #1024	; 0x400
  b8:	0afffffc 	beq	b0 <main+0x9c>
			GPIO_OUT = TO_INTEGER(arke_oif);
  bc:	e3a03e66 	mov	r3, #1632	; 0x660
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
  c0:	e3a02e46 	mov	r2, #1120	; 0x460
  c4:	e2833005 	add	r3, r3, #5	; 0x5
  c8:	e2822005 	add	r2, r2, #5	; 0x5
  cc:	e5013fdf 	str	r3, [r1, #-4063]
  d0:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = 'l';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
  d4:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
  d8:	e3130b01 	tst	r3, #1024	; 0x400
  dc:	1a000003 	bne	f0 <main+0xdc>
  e0:	e3e02a01 	mvn	r2, #4096	; 0x1000
  e4:	e5123fdb 	ldr	r3, [r2, #-4059]
  e8:	e3130b01 	tst	r3, #1024	; 0x400
  ec:	0afffffc 	beq	e4 <main+0xd0>
			GPIO_OUT = TO_INTEGER(arke_oif);
  f0:	e5010fdf 	str	r0, [r1, #-4063]
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
  f4:	e501cfdf 	str	ip, [r1, #-4063]
			
			arke_oif.data_out = 'l';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
  f8:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
  fc:	e3130b01 	tst	r3, #1024	; 0x400
 100:	1a000003 	bne	114 <main+0x100>
 104:	e3e02a01 	mvn	r2, #4096	; 0x1000
 108:	e5123fdb 	ldr	r3, [r2, #-4059]
 10c:	e3130b01 	tst	r3, #1024	; 0x400
 110:	0afffffc 	beq	108 <main+0xf4>
			GPIO_OUT = TO_INTEGER(arke_oif);
 114:	e5010fdf 	str	r0, [r1, #-4063]
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 118:	e501cfdf 	str	ip, [r1, #-4063]
			
			arke_oif.data_out = 'o';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 11c:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 120:	e3130b01 	tst	r3, #1024	; 0x400
 124:	1a000003 	bne	138 <main+0x124>
 128:	e3e02a01 	mvn	r2, #4096	; 0x1000
 12c:	e5123fdb 	ldr	r3, [r2, #-4059]
 130:	e3130b01 	tst	r3, #1024	; 0x400
 134:	0afffffc 	beq	12c <main+0x118>
			GPIO_OUT = TO_INTEGER(arke_oif);
 138:	e3a03e66 	mov	r3, #1632	; 0x660
			
			arke_oif.tx = 0; 

			GPIO_OUT = TO_INTEGER(arke_oif);
 13c:	e3a02e46 	mov	r2, #1120	; 0x460
 140:	e283300f 	add	r3, r3, #15	; 0xf
 144:	e282200f 	add	r2, r2, #15	; 0xf
 148:	e5013fdf 	str	r3, [r1, #-4063]
 14c:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = ' ';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 150:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 154:	e3130b01 	tst	r3, #1024	; 0x400
 158:	1a000003 	bne	16c <main+0x158>
 15c:	e3e02a01 	mvn	r2, #4096	; 0x1000
 160:	e5123fdb 	ldr	r3, [r2, #-4059]
 164:	e3130b01 	tst	r3, #1024	; 0x400
 168:	0afffffc 	beq	160 <main+0x14c>
			GPIO_OUT = TO_INTEGER(arke_oif);
 16c:	e3a03e62 	mov	r3, #1568	; 0x620
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 170:	e3a02e42 	mov	r2, #1056	; 0x420
 174:	e5013fdf 	str	r3, [r1, #-4063]
 178:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = 'w';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 17c:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 180:	e3130b01 	tst	r3, #1024	; 0x400
 184:	1a000003 	bne	198 <main+0x184>
 188:	e3e02a01 	mvn	r2, #4096	; 0x1000
 18c:	e5123fdb 	ldr	r3, [r2, #-4059]
 190:	e3130b01 	tst	r3, #1024	; 0x400
 194:	0afffffc 	beq	18c <main+0x178>
			GPIO_OUT = TO_INTEGER(arke_oif);
 198:	e3a03e67 	mov	r3, #1648	; 0x670
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 19c:	e3a02e47 	mov	r2, #1136	; 0x470
 1a0:	e2833007 	add	r3, r3, #7	; 0x7
 1a4:	e2822007 	add	r2, r2, #7	; 0x7
 1a8:	e5013fdf 	str	r3, [r1, #-4063]
 1ac:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = 'o';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 1b0:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 1b4:	e3130b01 	tst	r3, #1024	; 0x400
 1b8:	1a000003 	bne	1cc <main+0x1b8>
 1bc:	e3e02a01 	mvn	r2, #4096	; 0x1000
 1c0:	e5123fdb 	ldr	r3, [r2, #-4059]
 1c4:	e3130b01 	tst	r3, #1024	; 0x400
 1c8:	0afffffc 	beq	1c0 <main+0x1ac>
			GPIO_OUT = TO_INTEGER(arke_oif);
 1cc:	e3a03e66 	mov	r3, #1632	; 0x660
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 1d0:	e3a02e46 	mov	r2, #1120	; 0x460
 1d4:	e283300f 	add	r3, r3, #15	; 0xf
 1d8:	e282200f 	add	r2, r2, #15	; 0xf
 1dc:	e5013fdf 	str	r3, [r1, #-4063]
 1e0:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = 'r';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 1e4:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 1e8:	e3130b01 	tst	r3, #1024	; 0x400
 1ec:	1a000003 	bne	200 <main+0x1ec>
 1f0:	e3e02a01 	mvn	r2, #4096	; 0x1000
 1f4:	e5123fdb 	ldr	r3, [r2, #-4059]
 1f8:	e3130b01 	tst	r3, #1024	; 0x400
 1fc:	0afffffc 	beq	1f4 <main+0x1e0>
			GPIO_OUT = TO_INTEGER(arke_oif);
 200:	e3a03e67 	mov	r3, #1648	; 0x670
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 204:	e3a02e47 	mov	r2, #1136	; 0x470
 208:	e2833002 	add	r3, r3, #2	; 0x2
 20c:	e2822002 	add	r2, r2, #2	; 0x2
 210:	e5013fdf 	str	r3, [r1, #-4063]
 214:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = 'l';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 218:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 21c:	e3130b01 	tst	r3, #1024	; 0x400
 220:	1a000003 	bne	234 <main+0x220>
 224:	e3e02a01 	mvn	r2, #4096	; 0x1000
 228:	e5123fdb 	ldr	r3, [r2, #-4059]
 22c:	e3130b01 	tst	r3, #1024	; 0x400
 230:	0afffffc 	beq	228 <main+0x214>
			GPIO_OUT = TO_INTEGER(arke_oif);
 234:	e5010fdf 	str	r0, [r1, #-4063]
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 238:	e501cfdf 	str	ip, [r1, #-4063]
			
			arke_oif.data_out = 'd';
			arke_oif.tx = 1;

			stall_go_in = ((GPIO_IN>>10) & 0x1);
 23c:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 240:	e3130b01 	tst	r3, #1024	; 0x400
 244:	1a000003 	bne	258 <main+0x244>
 248:	e3e02a01 	mvn	r2, #4096	; 0x1000
 24c:	e5123fdb 	ldr	r3, [r2, #-4059]
 250:	e3130b01 	tst	r3, #1024	; 0x400
 254:	0afffffc 	beq	24c <main+0x238>
			GPIO_OUT = TO_INTEGER(arke_oif);
 258:	e3a03e66 	mov	r3, #1632	; 0x660
			
			arke_oif.tx = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 25c:	e3a02e46 	mov	r2, #1120	; 0x460
 260:	e2833004 	add	r3, r3, #4	; 0x4
 264:	e2822004 	add	r2, r2, #4	; 0x4
 268:	e5013fdf 	str	r3, [r1, #-4063]
 26c:	e5012fdf 	str	r2, [r1, #-4063]
			
			arke_oif.data_out = new_line;
			arke_oif.tx = 1;
			arke_oif.eop_out = 1;
			
			stall_go_in = ((GPIO_IN>>10) & 0x1);
 270:	e5113fdb 	ldr	r3, [r1, #-4059]
			while(stall_go_in != 1) stall_go_in = ((GPIO_IN>>10) & 0x1);
 274:	e3130b01 	tst	r3, #1024	; 0x400
 278:	1a000003 	bne	28c <main+0x278>
 27c:	e3e02a01 	mvn	r2, #4096	; 0x1000
 280:	e5123fdb 	ldr	r3, [r2, #-4059]
 284:	e3130b01 	tst	r3, #1024	; 0x400
 288:	0afffffc 	beq	280 <main+0x26c>
			GPIO_OUT = TO_INTEGER(arke_oif);
 28c:	e3a03c07 	mov	r3, #1792	; 0x700
			
			arke_oif.tx = 0;
			arke_oif.eop_out = 0;

			GPIO_OUT = TO_INTEGER(arke_oif);
 290:	e3a02b01 	mov	r2, #1024	; 0x400
 294:	e283300c 	add	r3, r3, #12	; 0xc
 298:	e282200c 	add	r2, r2, #12	; 0xc
 29c:	e5013fdf 	str	r3, [r1, #-4063]
 2a0:	e5012fdf 	str	r2, [r1, #-4063]
 2a4:	eaffff63 	b	38 <main+0x24>
